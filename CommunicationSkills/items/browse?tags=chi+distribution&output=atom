<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>http://cs-comm.lib.muohio.edu/items/browse?tags=chi+distribution&amp;output=atom</id>
  <title><![CDATA[Incorporating Communication Outcomes into the Computer Science Curriculum]]></title>
  <subtitle><![CDATA[The CPATH-II project is a National Science Foundation funded project under the Division of Computer and Communication Foundation (CCF) that focuses on “Incorporating Communication Outcomes into the Computer Science Curriculum”. The project is a three year project that began in October, 2009 and will culminate at the end of September, 2012. 
<p/>
The dissemination of the project's research will come with the creation of a repository that allows CSE faculty members to access a web-based set of assignments. The goal of these assignments is to aid CSE faculty in redesigning their assignments, courses, and curricula in order to incorporate and enhance their students abilities to communicate and collaborate with a wide variety of audiences. The repository will be populated with assignments written and designed by both CSE and CAC faculty with the premise of integrating communication abilities while also enhancing the learning of the technical content being taught in their course and/or curriculum.
<p/>]]></subtitle>
  <author>
    <name><![CDATA[jcg]]></name>
  </author>
  <updated>2020-05-18T19:11:20-04:00</updated>
  <generator>Omeka</generator>
  <link rel="self" href="http://cs-comm.lib.muohio.edu/items/browse?tags=chi+distribution&amp;output=atom"/>
  <link rel="first" type="application/atom+xml" href="http://cs-comm.lib.muohio.edu/index/index/page/1?tags=chi+distribution&amp;output=atom"/>
  <link rel="last" type="application/atom+xml" href="http://cs-comm.lib.muohio.edu/index/index/page/1?tags=chi+distribution&amp;output=atom"/>
  <entry>
    <id>http://cs-comm.lib.muohio.edu/items/show/47</id>
    <title><![CDATA[How many shuffles?  Linked List Representations<br />
]]></title>
    <summary><![CDATA[Linked list creation and manipulation; simulation of card deck shuffling<br />
<br />
Students start with the implementation of a basic linked last class and selected functionality designed to force them to thin through the issues of modifying lists without destroying list integrity.  Following this then they use the list to model a standard deck of cards, and implement a Monte Carlo simulation to determine the required number of times the deck must be shuffled in order to ensure a random ordering.<br />
<br />
Duration: 2 weeks<br />
<br />
Background: The student must be familiar with basic C++ syntax, C++ classes, and basic C++ memory management.  There is no assumption of a statistical background: relevant statistical tools (chi-square) is explained at high-level in the documentation and is provided as a code library.<br />
]]></summary>
    <updated>2012-07-30T13:31:07-04:00</updated>
    <link rel="alternate" type="text/html" href="http://cs-comm.lib.muohio.edu/items/show/47"/>
    <link rel="enclosure" href="http://cs-comm.lib.muohio.edu/archive/files/1d2972e65cc2030ff531576954600d9c.zip" type="application/zip" length="362133"/>
    <link rel="enclosure" href="http://cs-comm.lib.muohio.edu/archive/files/7b28b15dc85099b6dafea7f1c111f32b.docx" type="application/zip" length="181703"/>
    <category term="chi distribution"/>
    <content type="html"><![CDATA[<div class="element-set">
    <!--h2>Dublin Core</h2-->
        <div id="dublin-core-title" class="element">
        <h3>Title        </h3>
                                    <div class="element-text">How many shuffles?  Linked List Representations<br />
</div>
                    </div><!-- end element -->
            <div id="dublin-core-subject" class="element">
        <h3>Course        </h3>
                                    <div class="element-text">Data Structures</div>
                    </div><!-- end element -->
            <div id="dublin-core-description" class="element">
        <h3>Abstract        </h3>
                                    <div class="element-text">Linked list creation and manipulation; simulation of card deck shuffling<br />
<br />
Students start with the implementation of a basic linked last class and selected functionality designed to force them to thin through the issues of modifying lists without destroying list integrity.  Following this then they use the list to model a standard deck of cards, and implement a Monte Carlo simulation to determine the required number of times the deck must be shuffled in order to ensure a random ordering.<br />
<br />
Duration: 2 weeks<br />
<br />
Background: The student must be familiar with basic C++ syntax, C++ classes, and basic C++ memory management.  There is no assumption of a statistical background: relevant statistical tools (chi-square) is explained at high-level in the documentation and is provided as a code library.<br />
</div>
                    </div><!-- end element -->
            <div id="dublin-core-creator" class="element">
        <h3>Author        </h3>
                                    <div class="element-text">John Karro, William Brinkman</div>
                    </div><!-- end element -->
                    </div><!-- end element-set -->
<div class="element-set">
    <!--h2>Assignment Item Type Metadata</h2-->
        <div id="assignment-item-type-metadata-genre" class="element">
        <h3>Genre        </h3>
                                    <div class="element-text">Coding, short-answer prose, mathematical reasoning</div>
                    </div><!-- end element -->
            <div id="assignment-item-type-metadata-duration-of-assignment" class="element">
        <h3>Assignment Duration        </h3>
                                    <div class="element-text">Two Weeks</div>
                    </div><!-- end element -->
            <div id="assignment-item-type-metadata-skill" class="element">
        <h3>Communication Skill        </h3>
                                    <div class="element-text">reading, writing</div>
                    </div><!-- end element -->
            <div id="assignment-item-type-metadata-technical-skill" class="element">
        <h3>Technical Skill        </h3>
                                    <div class="element-text">Implementation, linear data structures, pointers and memory management</div>
                    </div><!-- end element -->
            <div id="assignment-item-type-metadata-workplace-scenario" class="element">
        <h3>Workplace Scenario        </h3>
                                    <div class="element-text">You have been hired by a major Casino chain to verify the Bayer-Diaconis theorem, which purports to prove how many times a 52-card playing deck must be riffle-shuffled in order to completely randomize it (that is, make sure that, when done, each card could be anywhere in the deck with equal probability – regardless of where it started.).  It is extremely important to the Casino that, before each deal at the Black Jack table, a deck be shuffled enough to make the order random. Failure to do so could lead to potential biases that a player might exploit.  But Bayer-Diaconis is an analytic proof – a logical deduction from first principles.  Your employer wants empirical evidence that Bayer-Diaconis is correct.  One possibility is to have you shuffle the desk for a few billion years and track where the cards end up, but that is impractical.  What is practical is to run a simulation and apply a basic statistical tool to establish the actual bound.<br />
<br />
Importance: Using simulation to study the behavior of complex systems is one of the primary functions of Computer Science, and this project will expose you to some of the basic principles of the area.  At a lower level, it will also require you to work with linked lists – arguably one of the two most important data structures we use.  <br />
<br />
You will also be asked to read investigate the linked-list data structure and discuss aspects of the reading.  In reality, you will often need to pick a data structure appropriate to your problem, frequently choosing between established structures you are unfamiliar with.  This will involve a certain degree of research: reading and understanding papers or text on the options, and possibly defending your decision to a colleague, boss, or client.  The questions in this assignment are intended both to test your understanding and to make sure you can coherently explain what you have learned to another party.  <br />
</div>
                    </div><!-- end element -->
            <div id="assignment-item-type-metadata-team-size" class="element">
        <h3>Team Size        </h3>
                                    <div class="element-text">N/A</div>
                    </div><!-- end element -->
            </div><!-- end element-set -->
]]></content>
  </entry>
</feed>
