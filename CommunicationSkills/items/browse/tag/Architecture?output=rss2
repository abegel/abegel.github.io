<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title><![CDATA[Incorporating Communication Outcomes into the Computer Science Curriculum]]></title>
    <link>http://cs-comm.lib.muohio.edu/items/browse/tag/Architecture?output=rss2</link>
    <description><![CDATA[]]></description>
    <pubDate>Mon, 18 May 2020 19:23:47 -0400</pubDate>
    <managingEditor>millarj@muohio.edu (Incorporating Communication Outcomes into the Computer Science Curriculum)</managingEditor>
    <generator>Zend_Feed</generator>
    <docs>http://blogs.law.harvard.edu/tech/rss</docs>
    <item>
      <title><![CDATA[Logical Architecture and Layer Pattern Memo]]></title>
      <link>http://cs-comm.lib.muohio.edu/items/show/77</link>
      <description><![CDATA[<div class="element-set">
    <!--h2>Dublin Core</h2-->
        <div id="dublin-core-title" class="element">
        <h3>Title        </h3>
                                    <div class="element-text">Logical Architecture and Layer Pattern Memo</div>
                    </div><!-- end element -->
            <div id="dublin-core-subject" class="element">
        <h3>Course        </h3>
                                    <div class="element-text">Software Engineering</div>
                    </div><!-- end element -->
            <div id="dublin-core-description" class="element">
        <h3>Abstract        </h3>
                                    <div class="element-text">Describe logical architecture and the layers pattern.</div>
                    </div><!-- end element -->
            <div id="dublin-core-creator" class="element">
        <h3>Author        </h3>
                                    <div class="element-text">Douglas Troy</div>
                    </div><!-- end element -->
            <div id="dublin-core-source" class="element">
        <h3>Source        </h3>
                                    <div class="element-text">Larman, Craig. Applying UML and Patterns: An Introduction to Object-Oriented Analysis and Design and Iterative Development (3rd Edition), 2004.</div>
                    </div><!-- end element -->
                </div><!-- end element-set -->
<div class="element-set">
    <!--h2>Assignment Item Type Metadata</h2-->
        <div id="assignment-item-type-metadata-genre" class="element">
        <h3>Genre        </h3>
                                    <div class="element-text">Memo</div>
                    </div><!-- end element -->
            <div id="assignment-item-type-metadata-duration-of-assignment" class="element">
        <h3>Assignment Duration        </h3>
                                    <div class="element-text">Less than a week</div>
                    </div><!-- end element -->
            <div id="assignment-item-type-metadata-skill" class="element">
        <h3>Communication Skill        </h3>
                                    <div class="element-text">Reading<br />
Writing</div>
                    </div><!-- end element -->
            <div id="assignment-item-type-metadata-technical-skill" class="element">
        <h3>Technical Skill        </h3>
                                    <div class="element-text">Design</div>
                    </div><!-- end element -->
            <div id="assignment-item-type-metadata-workplace-scenario" class="element">
        <h3>Workplace Scenario        </h3>
                                    <div class="element-text">An architecture is the set of significant decisions about the organization of a software system (section 13.4). The logical architecture is the large-scale organization of the software classes into packages, subsystems, and layers (section 13.2). A layer is a grouping of classes, packages or subsystems that has cohesive responsibility for a major aspect of the system. Also, layers are organized such that higher layers call upon services of lower layers. If you have taken the networking course or the operating systems course, you have seen examples of layered architectures such as the layers of the TCP/IP protocol stack, or the concept of operating system layers.  The purpose of this homework is to introduce the general approach to software architecture design and to explore examples of the layer pattern. These concepts will help you in future projects where you need to create the overall design (architecture) of software systems.<br />
<br />
In this memo to your supervisor you will summarize the three-layer pattern and recommend how the architecture for our project could be modified to add a feature that tracks the userâ€™s progress through your project.</div>
                    </div><!-- end element -->
            <div id="assignment-item-type-metadata-team-size" class="element">
        <h3>Team Size        </h3>
                                    <div class="element-text">N/A</div>
                    </div><!-- end element -->
            </div><!-- end element-set -->
<div class="item-file application-zip"><a class="download-file" href="http://cs-comm.lib.muohio.edu/archive/files/5ccbf87cdbe0c6d5a196e24e7c3809ba.docx">HW_20.docx</a></div>]]></description>
      <pubDate>Tue, 24 Jul 2012 17:28:34 -0400</pubDate>
      <enclosure url="http://cs-comm.lib.muohio.edu/archive/fullsize/5ccbf87cdbe0c6d5a196e24e7c3809ba.jpg" type="application/zip" length="23494"/>
    </item>
  </channel>
</rss>
